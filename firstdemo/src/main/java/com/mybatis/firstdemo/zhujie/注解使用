注解的定义
   1.注解通过 @interface关键字进行定义。
   public @interface TestAnnotation {
   }
注解的应用
    @TestAnnotation
    public class Test {
    }
    创建一个类 Test,然后在类定义的地方加上 @TestAnnotation 就可以用 TestAnnotation 注解这个类了。
    你可以简单理解为将 TestAnnotation 这张标签贴到 Test 这个类上面。
    不过，要想注解能够正常工作，还需要介绍一下一个新的概念那就是元注解。

元注解：
    元注解是什么意思呢？

    元注解是可以注解到注解上的注解，或者说元注解是一种基本注解，但是它能够应用到其它的注解上面。

    如果难于理解的话，你可以这样理解。元注解也是一张标签，但是它是一张特殊的标签，它的作用和目的就是给其他普通的标签进行解释说明的。

    元标签有 @Retention、@Documented、@Target、@Inherited、@Repeatable 5 种。

         Retention 的英文意为保留期的意思。当 @Retention 应用到一个注解上的时候，它解释说明了这个注解的的存活时间。

         它的取值如下：
         RetentionPolicy.SOURCE 注解只在源码阶段保留，在编译器进行编译时它将被丢弃忽视。
         RetentionPolicy.CLASS 注解只被保留到编译进行的时候，它并不会被加载到 JVM 中。
         RetentionPolicy.RUNTIME 注解可以保留到程序运行的时候，它会被加载进入到 JVM 中，所以在程序运行时可以获取到它们


