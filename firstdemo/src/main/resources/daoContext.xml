<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:jee="http://www.springframework.org/schema/jee"
	   xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	<import resource="classpath*:mong-config.xml"/>
	<bean id="propertyConfigurer" class="com.tera.util.PropertyUtil">
		<property name="locations">
			<list>
				<value>classpath*:application.properties</value>
			</list>
		</property>
	</bean>
	<bean class="com.tera.util.SpringUtil" />
	<context:component-scan base-package="com.tera">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>

	<!-- 启用自动装配 -->
	<context:annotation-config />

	<!-- AOP 规则引擎使用 -->
	<aop:aspectj-autoproxy/>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://192.168.1.3:3306/dachuizichanlhp?useUnicode=true&amp;rewriteBatchedStatements=true&amp;characterEncoding=UTF-8</value>
		</property>
		<property name="username">
			<!-- <value>devwrite</value> -->
			<value>zhaoqingkai</value>
		</property>
		<property name="password">
			<!-- <value>9~!VKaC+7f,d</value> -->
			<!-- <value>VKaC+7f</value>-->
			<value>zhaoqingkai123456</value>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<!-- 1800秒，也就是30分钟 --><!--
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" /> -->
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
	</bean>
	<!--
	<bean id="dataSource1"
		  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://116.213.204.14:3306/cuishou?zeroDateTimeBehavior=convertToNull</value> -->
	<!-- <value>jdbc:mysql://localhost:3306/dachui</value> -->
	<!--
</property>
<property name="username"> -->
	<!-- <value>admin</value> -->
	<!-- <value>root</value>
</property>
<property name="password">
    <value>9~!VKaC+7f,d</value>
    <value>123456</value>
</property>
</bean>
-->

	<!-- 声明事务管理器	-->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 声明事务管理器
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager" />
	-->

	<!-- 创建 SqlSessionFactory	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="plugins">
			<list>
				<bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
					<property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect"></property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 扫描mappers并让他们自动装配	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"  value="com.tera" />
	</bean>

	<!-- 启用注解驱动的声明事务支持 -->
	<tx:annotation-driven />
</beans>